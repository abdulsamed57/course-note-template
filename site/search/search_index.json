{"config":{"indexing":"full","lang":["en","tr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2019-2022 U\u011fur CORUH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2019-2022 U\u011fur CORUH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"changelog/","text":"Log Creation \u00b6 run following the command via git-bash and copy output to following content git log Course Notes Changelog \u00b6 commit 17986d18a2377020071ce2554687c5a17e6317a8 ( HEAD -> main, origin/main ) Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :11:21 2022 +0300 docx and pptx disabled commit 2736da8de40d920b6fef20099d5ba6ce560e942b Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :07:00 2022 +0300 week-2 completed and fixed commit 15e42bbccb8527e3b69e0fea9cc98bfcd1158a02 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :57:11 2022 +0300 images are added commit 7d60e5ed861659d1bf094de02fd91c1c50842930 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :51:57 2022 +0300 initial commit","title":"Changelog"},{"location":"changelog/#log-creation","text":"run following the command via git-bash and copy output to following content git log","title":"Log Creation"},{"location":"changelog/#course-notes-changelog","text":"commit 17986d18a2377020071ce2554687c5a17e6317a8 ( HEAD -> main, origin/main ) Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :11:21 2022 +0300 docx and pptx disabled commit 2736da8de40d920b6fef20099d5ba6ce560e942b Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :07:00 2022 +0300 week-2 completed and fixed commit 15e42bbccb8527e3b69e0fea9cc98bfcd1158a02 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :57:11 2022 +0300 images are added commit 7d60e5ed861659d1bf094de02fd91c1c50842930 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :51:57 2022 +0300 initial commit","title":"Course Notes Changelog"},{"location":"resume/","text":"Resume \u00b6 Download Resume-English Resume-Turkish English Turkish","title":"Resume"},{"location":"resume/#resume","text":"Download Resume-English Resume-Turkish English Turkish","title":"Resume"},{"location":"syllabus/syllabus/","text":"Recep Tayyip Erdogan University \u00b6 Faculty of Engineering and Architecture \u00b6 Computer Engineering \u00b6 CE204 Object-Oriented Programming \u00b6 Syllabus \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Download WORD , PDF Instructor Asst. Prof. Dr. U\u011fur CORUH Contact Information ugur.coruh@erdogan.edu.tr Office No F-301 Google Classroom Code n24xrzo Lecture Hours and Days Theory - Monday (13:00-16:00) Lab \u2013 Thursday (10:00-12:00) Lecture Classroom D-203 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starts with [CE204] tag for the fast response and write formal, clear, and short emails. Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite CE103- Algorithms and Programming I CE100- Algorithms and Programming II Corequisite TBD Requirement TBD *TBD: To Be Defined. A.Course Description \u00b6 This course introduces advanced programming skills with a focus on object-oriented programming and design fundamentals using a high-level language such as Java. Object-oriented programming is the process of integrating software components into a large-scale software architecture. After learning the fundamentals of coding, this approach to software development is the next logical step, allowing for large-scale programs. The course focuses on understanding and applying object-oriented concepts such as classes, objects, data abstraction, methods, method overloading, inheritance, and polymorphism. The class will be built around sharing expertise and guiding students to find learning methods and practice for object-oriented programming topics. Making programming applications and projects in the courses will strengthen the learning process by putting theory into practice. B.Course Learning Outcomes \u00b6 After completing this course satisfactorily, a student will be able to: Design applications using OO techniques Use the unified software development process to manage software development Use UML for the notation diagrams of applications Apply useful design and architecture patterns for software development. C.Course Topics \u00b6 Object-oriented concepts Unified object-oriented analysis and design process Unified Model Language Use case analysis Object structure and behavior analysis System design Application architecture and design patterns Java implementation of object-oriented design D.Textbooks and Required Hardware or Equipment \u00b6 This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Timothy C. Lethbridge and Robert Lagani\u00e8re, Object-Oriented Software Engineering: Practical Software Development using UML and Java, McGraw Hill Walter Savitch, Absolute C++, Addison-Wesley Longman Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices. E.Grading System \u00b6 Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week homeworks or projects as follow \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\] F. Instructional Strategies and Methods \u00b6 The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, homeworks, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken G. Late Homework \u00b6 Throughout the semester, assignments must be submitted as specified by the announced deadline. Overdue assignments will not be accepted. Unexpected situations must be reported to the instructor for late homeworks by students H. Course Platform and Communication \u00b6 Google Classroom and Github will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor to complete the course with success. I. Academic Integrity, Plagiarism & Cheating \u00b6 Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not. a. What is acceptable when preparing an assignment? \u00b6 Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you. b. What is not acceptable? \u00b6 Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it. J. Expectations \u00b6 You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication. K. Lecture Content and Syllabus Updates \u00b6 If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this. Course Schedule Overview \u00b6 Weeks Dates Subjects Other Tasks Week 1 21.02.2022-24.02.2022 Course Plan and Communication Grading System, Assignments, and Exams. Software and Software Engineering Object Orientation and OOP with Java Part-I(Classes, Objects, Methods,Inheritance,Access Modifiers,This and InstanceOf Keywords) TBD Week 2 28.02.2022-03.03.2022 OOP with Java Part-II (super keyword, final keyword, Polymorphism / Encapsulation, Method Overriding, Nested Inner Class, Static Class, Anonymous Class, Enums / Enum-Constructor / Enum-String, Abstract Class, Object Class, Forms of Inheritance, Benefits, and Costs of Inheritance, Packages, Access Protection in Packages TBD Week 3 07.03.2022-10.03.2022 OOP with Java Part-III(Defining and Interface and Interface Implementation, Nested Interfaces, Variables in Interfaces, Extending Interfaces, Reflection, Wrapper Classes, Lambda Notation) TBD Week 4 14.03.2022-17.03.2022 UML (UML tools, UML building blocks, architecture, diagrams, relationship, association, aggregation, composition comparison, association, dependency, generalization, realization, class diagram, object diagram, component diagram, deployment diagram, interaction diagram, use-case diagram, sequence diagram, collaboration diagram, state-machine diagram, activity diagram, timing diagram) TBD Week 5 21.03.2022-24.03.2022 Plantuml and Examples TBD Week-6 28.03.2022-31.03.2022 UMPLE and Examples TBD Week-7 04.04.2022-07.04.2022 UMPLE and Examples TBD Week-8 09.04.2022-17.04.2022 Midterm TBD Week-9 18.04.2022-21.04.2022 Using Design Patterns TBD Week-10 25.04.2022-28.04.2022 Using Design Patterns TBD Week-11 02.05.2022-05.05.2022 Holiday TBD Week-12 09.05.2022-12.05.2022 UML + UMPLE + Java Implementations TBD Week-13 16.05.2022-19.05.2022 SMC Remote Service Case Study Part-I TBD Week-14 23.05.2022-26.05.2022 SMC Remote Service Case Study Part-II TBD Week-15 30.05.2022-02.06.2022 OOP ATM Case Study Part-I TBD Week-16 06.06.2022-09.06.2022 OOP ATM Case Study Part-II TBD Week-17 13.06.2022-26.06.2022 Final \\(End-Of-Object-Oriented-Programming-Syllabus\\)","title":"Syllabus"},{"location":"syllabus/syllabus/#recep-tayyip-erdogan-university","text":"","title":"Recep Tayyip Erdogan University"},{"location":"syllabus/syllabus/#faculty-of-engineering-and-architecture","text":"","title":"Faculty of Engineering and Architecture"},{"location":"syllabus/syllabus/#computer-engineering","text":"","title":"Computer Engineering"},{"location":"syllabus/syllabus/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"syllabus/syllabus/#syllabus","text":"","title":"Syllabus"},{"location":"syllabus/syllabus/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX Download WORD , PDF Instructor Asst. Prof. Dr. U\u011fur CORUH Contact Information ugur.coruh@erdogan.edu.tr Office No F-301 Google Classroom Code n24xrzo Lecture Hours and Days Theory - Monday (13:00-16:00) Lab \u2013 Thursday (10:00-12:00) Lecture Classroom D-203 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starts with [CE204] tag for the fast response and write formal, clear, and short emails. Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite CE103- Algorithms and Programming I CE100- Algorithms and Programming II Corequisite TBD Requirement TBD *TBD: To Be Defined.","title":"Spring Semester, 2021-2022"},{"location":"syllabus/syllabus/#acourse-description","text":"This course introduces advanced programming skills with a focus on object-oriented programming and design fundamentals using a high-level language such as Java. Object-oriented programming is the process of integrating software components into a large-scale software architecture. After learning the fundamentals of coding, this approach to software development is the next logical step, allowing for large-scale programs. The course focuses on understanding and applying object-oriented concepts such as classes, objects, data abstraction, methods, method overloading, inheritance, and polymorphism. The class will be built around sharing expertise and guiding students to find learning methods and practice for object-oriented programming topics. Making programming applications and projects in the courses will strengthen the learning process by putting theory into practice.","title":"A.Course Description"},{"location":"syllabus/syllabus/#bcourse-learning-outcomes","text":"After completing this course satisfactorily, a student will be able to: Design applications using OO techniques Use the unified software development process to manage software development Use UML for the notation diagrams of applications Apply useful design and architecture patterns for software development.","title":"B.Course Learning Outcomes"},{"location":"syllabus/syllabus/#ccourse-topics","text":"Object-oriented concepts Unified object-oriented analysis and design process Unified Model Language Use case analysis Object structure and behavior analysis System design Application architecture and design patterns Java implementation of object-oriented design","title":"C.Course Topics"},{"location":"syllabus/syllabus/#dtextbooks-and-required-hardware-or-equipment","text":"This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Timothy C. Lethbridge and Robert Lagani\u00e8re, Object-Oriented Software Engineering: Practical Software Development using UML and Java, McGraw Hill Walter Savitch, Absolute C++, Addison-Wesley Longman Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices.","title":"D.Textbooks and Required Hardware or Equipment"},{"location":"syllabus/syllabus/#egrading-system","text":"Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week homeworks or projects as follow \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\]","title":"E.Grading System"},{"location":"syllabus/syllabus/#f-instructional-strategies-and-methods","text":"The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, homeworks, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken","title":"F. Instructional Strategies and Methods"},{"location":"syllabus/syllabus/#g-late-homework","text":"Throughout the semester, assignments must be submitted as specified by the announced deadline. Overdue assignments will not be accepted. Unexpected situations must be reported to the instructor for late homeworks by students","title":"G. Late Homework"},{"location":"syllabus/syllabus/#h-course-platform-and-communication","text":"Google Classroom and Github will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor to complete the course with success.","title":"H. Course Platform and Communication"},{"location":"syllabus/syllabus/#i-academic-integrity-plagiarism-cheating","text":"Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not.","title":"I. Academic Integrity, Plagiarism &amp; Cheating"},{"location":"syllabus/syllabus/#a-what-is-acceptable-when-preparing-an-assignment","text":"Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you.","title":"a. What is acceptable when preparing an assignment?"},{"location":"syllabus/syllabus/#b-what-is-not-acceptable","text":"Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it.","title":"b. What is not acceptable?"},{"location":"syllabus/syllabus/#j-expectations","text":"You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication.","title":"J. Expectations"},{"location":"syllabus/syllabus/#k-lecture-content-and-syllabus-updates","text":"If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this.","title":"K. Lecture Content and Syllabus Updates"},{"location":"syllabus/syllabus/#course-schedule-overview","text":"Weeks Dates Subjects Other Tasks Week 1 21.02.2022-24.02.2022 Course Plan and Communication Grading System, Assignments, and Exams. Software and Software Engineering Object Orientation and OOP with Java Part-I(Classes, Objects, Methods,Inheritance,Access Modifiers,This and InstanceOf Keywords) TBD Week 2 28.02.2022-03.03.2022 OOP with Java Part-II (super keyword, final keyword, Polymorphism / Encapsulation, Method Overriding, Nested Inner Class, Static Class, Anonymous Class, Enums / Enum-Constructor / Enum-String, Abstract Class, Object Class, Forms of Inheritance, Benefits, and Costs of Inheritance, Packages, Access Protection in Packages TBD Week 3 07.03.2022-10.03.2022 OOP with Java Part-III(Defining and Interface and Interface Implementation, Nested Interfaces, Variables in Interfaces, Extending Interfaces, Reflection, Wrapper Classes, Lambda Notation) TBD Week 4 14.03.2022-17.03.2022 UML (UML tools, UML building blocks, architecture, diagrams, relationship, association, aggregation, composition comparison, association, dependency, generalization, realization, class diagram, object diagram, component diagram, deployment diagram, interaction diagram, use-case diagram, sequence diagram, collaboration diagram, state-machine diagram, activity diagram, timing diagram) TBD Week 5 21.03.2022-24.03.2022 Plantuml and Examples TBD Week-6 28.03.2022-31.03.2022 UMPLE and Examples TBD Week-7 04.04.2022-07.04.2022 UMPLE and Examples TBD Week-8 09.04.2022-17.04.2022 Midterm TBD Week-9 18.04.2022-21.04.2022 Using Design Patterns TBD Week-10 25.04.2022-28.04.2022 Using Design Patterns TBD Week-11 02.05.2022-05.05.2022 Holiday TBD Week-12 09.05.2022-12.05.2022 UML + UMPLE + Java Implementations TBD Week-13 16.05.2022-19.05.2022 SMC Remote Service Case Study Part-I TBD Week-14 23.05.2022-26.05.2022 SMC Remote Service Case Study Part-II TBD Week-15 30.05.2022-02.06.2022 OOP ATM Case Study Part-I TBD Week-16 06.06.2022-09.06.2022 OOP ATM Case Study Part-II TBD Week-17 13.06.2022-26.06.2022 Final \\(End-Of-Object-Oriented-Programming-Syllabus\\)","title":"Course Schedule Overview"},{"location":"week-1/week-1/","text":"CE103 Algorithms and Programming I \u00b6 Week-1 (Database Systems) \u00b6 Spring Semester, 2022-2023 \u00b6 Download DOC , SLIDE , PPTX Outline \u00b6 Understanding The Concept of Database and Relational Database Database Design Database \u00b6 Database \u00b6 What is Database? 1-) Database is a regular collection of information. 2-) Database is regular data stored in a computer environment. 3-) Systematic access in computer terminology capable, manageable, updateable, portable, defined relationships between each other is a set of available information. 4-) Systematically stored on the computer, It is a chunk of data that can be processed in programs. DBMS \u00b6 What is the Database Management System-DBMS Defining and creating a database, to keep alive and audited to the database used to gain access software system. DBMS \u00b6 Database systems contain the following information Collection of interrelated data The set of software required to access the data DBMS \u00b6 Advantages of Database Systems Database Systems prevents duplication of data. Establishing relationships between database systems and subsystems and many In practice, it requires data to be designed jointly within the same database. DBSM \u00b6 Advantages of Database Systems Database Systems ensures that the data is consistent. Data integrity, the accuracy and consistency of the data means. By placing constraints on data entries, only the desired range can be entered. The Entity-Relationship Model \u00b6 Revealing relationships in data analysis and modeling. It is the tool used to put it on. Entity: Distinguish from other objects in a field. \"thing\" or \"object\". By set of attributes is defined. Relationship: The relationship between more than one entity. Relationship and Relationship Sets \u00b6 The link between entities is called a relationship. For example, with the entity \u201cBurak\u201d, \u201cLessons\u201d There is a relationship between existence. Relationship set is the set of relationships of the same type, this set of relations is denoted by R. References \u00b6 https://avesis.erdogan.edu.tr/ugur.coruh https://www.linkedin.com/in/ugurcoruh/ https://csworlds.com/what-is-dbms-database-management-system/ https://prepinsta.com/dbms/entity-relationship-model-er-model/ \\(End-Of-Week-1-Module\\)","title":"Database Systems"},{"location":"week-1/week-1/#ce103-algorithms-and-programming-i","text":"","title":"CE103 Algorithms and Programming I"},{"location":"week-1/week-1/#week-1-database-systems","text":"","title":"Week-1 (Database Systems)"},{"location":"week-1/week-1/#spring-semester-2022-2023","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2022-2023"},{"location":"week-1/week-1/#outline","text":"Understanding The Concept of Database and Relational Database Database Design","title":"Outline"},{"location":"week-1/week-1/#database","text":"","title":"Database"},{"location":"week-1/week-1/#database_1","text":"What is Database? 1-) Database is a regular collection of information. 2-) Database is regular data stored in a computer environment. 3-) Systematic access in computer terminology capable, manageable, updateable, portable, defined relationships between each other is a set of available information. 4-) Systematically stored on the computer, It is a chunk of data that can be processed in programs.","title":"Database"},{"location":"week-1/week-1/#dbms","text":"What is the Database Management System-DBMS Defining and creating a database, to keep alive and audited to the database used to gain access software system.","title":"DBMS"},{"location":"week-1/week-1/#dbms_1","text":"Database systems contain the following information Collection of interrelated data The set of software required to access the data","title":"DBMS"},{"location":"week-1/week-1/#dbms_2","text":"Advantages of Database Systems Database Systems prevents duplication of data. Establishing relationships between database systems and subsystems and many In practice, it requires data to be designed jointly within the same database.","title":"DBMS"},{"location":"week-1/week-1/#dbsm","text":"Advantages of Database Systems Database Systems ensures that the data is consistent. Data integrity, the accuracy and consistency of the data means. By placing constraints on data entries, only the desired range can be entered.","title":"DBSM"},{"location":"week-1/week-1/#the-entity-relationship-model","text":"Revealing relationships in data analysis and modeling. It is the tool used to put it on. Entity: Distinguish from other objects in a field. \"thing\" or \"object\". By set of attributes is defined. Relationship: The relationship between more than one entity.","title":"The Entity-Relationship Model"},{"location":"week-1/week-1/#relationship-and-relationship-sets","text":"The link between entities is called a relationship. For example, with the entity \u201cBurak\u201d, \u201cLessons\u201d There is a relationship between existence. Relationship set is the set of relationships of the same type, this set of relations is denoted by R.","title":"Relationship and Relationship Sets"},{"location":"week-1/week-1/#references","text":"https://avesis.erdogan.edu.tr/ugur.coruh https://www.linkedin.com/in/ugurcoruh/ https://csworlds.com/what-is-dbms-database-management-system/ https://prepinsta.com/dbms/entity-relationship-model-er-model/ \\(End-Of-Week-1-Module\\)","title":"References"},{"location":"week-2/week-2/","text":"Sample Course Name \u00b6 Week-2 (Data Structures and Algorithms) \u00b6 Spring Semester, 2022-2023 \u00b6 Download DOC , SLIDE , PPTX Outline \u00b6 What is an Algorithm? Expression of Information on the Computer Arrays Linked-List Algorithm \u00b6 Algorithm \u00b6 What is an Algorithm? The algorithm emerged as a result of his research in the field of algebra in the 9 th century by Harezmi, known as the ancestor and founder of algebra. Because the Europeans could not pronounce the name Khwarezmi, they used it as algorism (rules for solving arithmetic problems using Arabic numbers). The algorithm was later called \"algorithm\". Algorithm \u00b6 What is an Algorithm? As you can see, our main problem is that the computer does not work. The first step is to check if the power cord is plugged in. If the answer to this step is No, we need to plug in the power cable, the answer is Yes, and if our computer still does not work, we need to perform the next step. The second step, after examining the condition of the extension cable, concludes that if our computer still does not work, we need to take it for repair. Expression of Information on the Computer \u00b6 When a person wants to express himself, he uses a native language, right? The computer also uses binary numbers (Binary Numbers) consisting of bits (0 and 1) to express information (Picture, sound, text, etc.) and to provide the loop. Expression of Information on the Computer \u00b6 The numbers 1 and 0 (bits) in binary numbers indicate whether the transistors used by the computer for electrical transmission are on or off. Transistors have two commands, 0 (close) and 1 (open). Arrays \u00b6 Arrays may need more than one object to make sense. For example, let's examine the computer example you are facing right now. Desktop computers make sense when they combine the keyboard-mouse-monitor trio. It is possible to make a trade without anyone, but it is difficult. Let's examine the memory problem, which is one of the array's drawbacks. Let's continue with our computer example. We already have a keyboard, a mouse and a monitor. When we get a new monitor we need a bigger desk. The same is true when we buy a new keyboard or mouse. We lose time and power while moving from one place to another. Arrays \u00b6 Linked-List \u00b6 Linked lists are structures that allow us to keep data without having to side by side. We do not need to open a new area in memory for the new element. Unlike Array, yes elements can be scattered in the memory, but the last element has to give its address to the previous element. References \u00b6 https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/algoritma-nedir https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/bilgi-ifade https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/sayi-sistem https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/linked-list \\(End-Of-Week-2-Module\\)","title":"Algorithms"},{"location":"week-2/week-2/#sample-course-name","text":"","title":"Sample Course Name"},{"location":"week-2/week-2/#week-2-data-structures-and-algorithms","text":"","title":"Week-2 (Data Structures and Algorithms)"},{"location":"week-2/week-2/#spring-semester-2022-2023","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2022-2023"},{"location":"week-2/week-2/#outline","text":"What is an Algorithm? Expression of Information on the Computer Arrays Linked-List","title":"Outline"},{"location":"week-2/week-2/#algorithm","text":"","title":"Algorithm"},{"location":"week-2/week-2/#algorithm_1","text":"What is an Algorithm? The algorithm emerged as a result of his research in the field of algebra in the 9 th century by Harezmi, known as the ancestor and founder of algebra. Because the Europeans could not pronounce the name Khwarezmi, they used it as algorism (rules for solving arithmetic problems using Arabic numbers). The algorithm was later called \"algorithm\".","title":"Algorithm"},{"location":"week-2/week-2/#algorithm_2","text":"What is an Algorithm? As you can see, our main problem is that the computer does not work. The first step is to check if the power cord is plugged in. If the answer to this step is No, we need to plug in the power cable, the answer is Yes, and if our computer still does not work, we need to perform the next step. The second step, after examining the condition of the extension cable, concludes that if our computer still does not work, we need to take it for repair.","title":"Algorithm"},{"location":"week-2/week-2/#expression-of-information-on-the-computer","text":"When a person wants to express himself, he uses a native language, right? The computer also uses binary numbers (Binary Numbers) consisting of bits (0 and 1) to express information (Picture, sound, text, etc.) and to provide the loop.","title":"Expression of Information on the Computer"},{"location":"week-2/week-2/#expression-of-information-on-the-computer_1","text":"The numbers 1 and 0 (bits) in binary numbers indicate whether the transistors used by the computer for electrical transmission are on or off. Transistors have two commands, 0 (close) and 1 (open).","title":"Expression of Information on the Computer"},{"location":"week-2/week-2/#arrays","text":"Arrays may need more than one object to make sense. For example, let's examine the computer example you are facing right now. Desktop computers make sense when they combine the keyboard-mouse-monitor trio. It is possible to make a trade without anyone, but it is difficult. Let's examine the memory problem, which is one of the array's drawbacks. Let's continue with our computer example. We already have a keyboard, a mouse and a monitor. When we get a new monitor we need a bigger desk. The same is true when we buy a new keyboard or mouse. We lose time and power while moving from one place to another.","title":"Arrays"},{"location":"week-2/week-2/#arrays_1","text":"","title":"Arrays"},{"location":"week-2/week-2/#linked-list","text":"Linked lists are structures that allow us to keep data without having to side by side. We do not need to open a new area in memory for the new element. Unlike Array, yes elements can be scattered in the memory, but the last element has to give its address to the previous element.","title":"Linked-List"},{"location":"week-2/week-2/#references","text":"https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/algoritma-nedir https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/bilgi-ifade https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/sayi-sistem https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/linked-list \\(End-Of-Week-2-Module\\)","title":"References"},{"location":"tr/","text":"","title":"Ana Sayfa"},{"location":"tr/license/","text":"Lisans \u00b6 MIT Lisans\u0131 Telif Hakk\u0131 \u00a9 2019-2022 U\u011fur \u00c7ORUH Bu belgeyle, bir kopyas\u0131n\u0131 alan herhangi bir ki\u015fiye \u00fccretsiz olarak izin verilir. bu yaz\u0131l\u0131m\u0131n ve ilgili dok\u00fcmantasyon dosyalar\u0131n\u0131n (\"Yaz\u0131l\u0131m\"), Yaz\u0131l\u0131mda, s\u0131n\u0131rlama olmaks\u0131z\u0131n, s\u0131n\u0131rlama olmaks\u0131z\u0131n anla\u015fma kullanma, kopyalama, de\u011fi\u015ftirme, birle\u015ftirme, yay\u0131nlama, da\u011f\u0131tma, alt lisans verme ve/veya Yaz\u0131l\u0131m\u0131n kopyalar\u0131n\u0131 satmak ve Yaz\u0131l\u0131m\u0131n kendisine ait oldu\u011fu ki\u015filere izin vermek a\u015fa\u011f\u0131daki ko\u015fullara tabi olarak, bunu yapmak \u00fczere d\u00f6\u015fenmi\u015ftir: Yukar\u0131daki telif hakk\u0131 bildirimi ve bu izin bildirimi Yaz\u0131l\u0131m\u0131n t\u00fcm kopyalar\u0131 veya \u00f6nemli b\u00f6l\u00fcmleri. YAZILIM, A\u00c7IK VEYA H\u0130\u00c7B\u0130R T\u00dcRDE GARANT\u0130 VER\u0130LMEKS\u0130Z\u0130N \"OLDU\u011eU G\u0130B\u0130\" SA\u011eLANMAKTADIR. SATILAB\u0130L\u0130RL\u0130K GARANT\u0130LER\u0130 DAH\u0130L ANCAK BUNLARLA SINIRLI OLMAMAK \u00dcZERE ZIMN\u0130, BEL\u0130RL\u0130 B\u0130R AMACA UYGUNLUK VE \u0130HLAL ETMEME. H\u0130\u00c7B\u0130R DURUMDA YAZARLAR VEYA TEL\u0130F HAKKI SAH\u0130PLER\u0130 HERHANG\u0130 B\u0130R \u0130DD\u0130A, ZARAR VEYA D\u0130\u011eER SORUMLULUKLARDAN SORUMLU OLAB\u0130L\u0130R Y\u00dcK\u00dcML\u00dcL\u00dcK, S\u00d6ZLE\u015eME, HAKSIZ YA DA BA\u015eKA B\u0130R DURUMDA OLU\u015eUR YAZILIMDAN VEYA KULLANIMDAN VEYA D\u0130\u011eER \u0130\u015eLEMLERLE BA\u011eLANTILI OLARAK YAZILIMDA.","title":"Lisans"},{"location":"tr/license/#lisans","text":"MIT Lisans\u0131 Telif Hakk\u0131 \u00a9 2019-2022 U\u011fur \u00c7ORUH Bu belgeyle, bir kopyas\u0131n\u0131 alan herhangi bir ki\u015fiye \u00fccretsiz olarak izin verilir. bu yaz\u0131l\u0131m\u0131n ve ilgili dok\u00fcmantasyon dosyalar\u0131n\u0131n (\"Yaz\u0131l\u0131m\"), Yaz\u0131l\u0131mda, s\u0131n\u0131rlama olmaks\u0131z\u0131n, s\u0131n\u0131rlama olmaks\u0131z\u0131n anla\u015fma kullanma, kopyalama, de\u011fi\u015ftirme, birle\u015ftirme, yay\u0131nlama, da\u011f\u0131tma, alt lisans verme ve/veya Yaz\u0131l\u0131m\u0131n kopyalar\u0131n\u0131 satmak ve Yaz\u0131l\u0131m\u0131n kendisine ait oldu\u011fu ki\u015filere izin vermek a\u015fa\u011f\u0131daki ko\u015fullara tabi olarak, bunu yapmak \u00fczere d\u00f6\u015fenmi\u015ftir: Yukar\u0131daki telif hakk\u0131 bildirimi ve bu izin bildirimi Yaz\u0131l\u0131m\u0131n t\u00fcm kopyalar\u0131 veya \u00f6nemli b\u00f6l\u00fcmleri. YAZILIM, A\u00c7IK VEYA H\u0130\u00c7B\u0130R T\u00dcRDE GARANT\u0130 VER\u0130LMEKS\u0130Z\u0130N \"OLDU\u011eU G\u0130B\u0130\" SA\u011eLANMAKTADIR. SATILAB\u0130L\u0130RL\u0130K GARANT\u0130LER\u0130 DAH\u0130L ANCAK BUNLARLA SINIRLI OLMAMAK \u00dcZERE ZIMN\u0130, BEL\u0130RL\u0130 B\u0130R AMACA UYGUNLUK VE \u0130HLAL ETMEME. H\u0130\u00c7B\u0130R DURUMDA YAZARLAR VEYA TEL\u0130F HAKKI SAH\u0130PLER\u0130 HERHANG\u0130 B\u0130R \u0130DD\u0130A, ZARAR VEYA D\u0130\u011eER SORUMLULUKLARDAN SORUMLU OLAB\u0130L\u0130R Y\u00dcK\u00dcML\u00dcL\u00dcK, S\u00d6ZLE\u015eME, HAKSIZ YA DA BA\u015eKA B\u0130R DURUMDA OLU\u015eUR YAZILIMDAN VEYA KULLANIMDAN VEYA D\u0130\u011eER \u0130\u015eLEMLERLE BA\u011eLANTILI OLARAK YAZILIMDA.","title":"Lisans"},{"location":"tr/changelog/","text":"G\u00fcnl\u00fck Olu\u015fturma \u00b6 komutu git-bash ile takip ederek \u00e7al\u0131\u015ft\u0131r\u0131n ve \u00e7\u0131kt\u0131y\u0131 a\u015fa\u011f\u0131daki i\u00e7eri\u011fe kopyalay\u0131n git log Ders Notlar\u0131 De\u011fi\u015fiklik G\u00fcnl\u00fc\u011f\u00fc \u00b6 commit 17986d18a2377020071ce2554687c5a17e6317a8 ( HEAD -> main, origin/main ) Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :11:21 2022 +0300 docx and pptx disabled commit 2736da8de40d920b6fef20099d5ba6ce560e942b Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :07:00 2022 +0300 week-2 completed and fixed commit 15e42bbccb8527e3b69e0fea9cc98bfcd1158a02 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :57:11 2022 +0300 images are added commit 7d60e5ed861659d1bf094de02fd91c1c50842930 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :51:57 2022 +0300 initial commit","title":"Ge\u00e7mi\u015f"},{"location":"tr/changelog/#gunluk-olusturma","text":"komutu git-bash ile takip ederek \u00e7al\u0131\u015ft\u0131r\u0131n ve \u00e7\u0131kt\u0131y\u0131 a\u015fa\u011f\u0131daki i\u00e7eri\u011fe kopyalay\u0131n git log","title":"G\u00fcnl\u00fck Olu\u015fturma"},{"location":"tr/changelog/#ders-notlar-degisiklik-gunlugu","text":"commit 17986d18a2377020071ce2554687c5a17e6317a8 ( HEAD -> main, origin/main ) Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :11:21 2022 +0300 docx and pptx disabled commit 2736da8de40d920b6fef20099d5ba6ce560e942b Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 21 :07:00 2022 +0300 week-2 completed and fixed commit 15e42bbccb8527e3b69e0fea9cc98bfcd1158a02 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :57:11 2022 +0300 images are added commit 7d60e5ed861659d1bf094de02fd91c1c50842930 Author: Ugur Coruh <ugur.coruh.tr@gmail.com> Date: Fri Mar 4 17 :51:57 2022 +0300 initial commit","title":"Ders Notlar\u0131 De\u011fi\u015fiklik G\u00fcnl\u00fc\u011f\u00fc"},{"location":"tr/resume/","text":"\u00d6zge\u00e7mi\u015f \u00b6 \u0130ndir \u00d6zge\u00e7mi\u015f-\u0130ngilizce \u00d6zge\u00e7mi\u015f-T\u00fcrk\u00e7e \u0130ngilizce T\u00fcrk\u00e7e","title":"\u00d6zge\u00e7mi\u015f"},{"location":"tr/resume/#ozgecmis","text":"\u0130ndir \u00d6zge\u00e7mi\u015f-\u0130ngilizce \u00d6zge\u00e7mi\u015f-T\u00fcrk\u00e7e \u0130ngilizce T\u00fcrk\u00e7e","title":"\u00d6zge\u00e7mi\u015f"},{"location":"tr/syllabus/syllabus/","text":"Recep Tayyip Erdo\u011fan \u00dcniversitesi \u00b6 M\u00fchendislik ve Mimarl\u0131k Fak\u00fcltesi \u00b6 Bilgisayar M\u00fchendisli\u011fi \u00b6 CE204 Nesne Y\u00f6nelimli Programlama \u00b6 Ders \u0130zlencesi \u00b6 Bahar D\u00f6nemi, 2021-2022 \u00b6 \u0130ndir DOC , SLIDE , PPTX \u0130ndir WORD , PDF Instructor Dr. \u00d6\u011fr. \u00dcyesi U\u011fur CORUH \u0130leti\u015fim Bilgisi ugur.coruh@erdogan.edu.tr Ofis F-301 Google S\u0131n\u0131f Kodu n24xrzo Ders Saati ve G\u00fcn\u00fc Teorik - Pazartesi (13:00-16:00) Lab \u2013 Per\u015fembe (10:00-12:00) Lecture Classroom D-203 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starts with [CE204] tag for the fast response and write formal, clear, and short emails. Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite CE103- Algorithms and Programming I CE100- Algorithms and Programming II Corequisite TBD Requirement TBD *TBD: To Be Defined. A.Course Description \u00b6 This course introduces advanced programming skills with a focus on object-oriented programming and design fundamentals using a high-level language such as Java. Object-oriented programming is the process of integrating software components into a large-scale software architecture. After learning the fundamentals of coding, this approach to software development is the next logical step, allowing for large-scale programs. The course focuses on understanding and applying object-oriented concepts such as classes, objects, data abstraction, methods, method overloading, inheritance, and polymorphism. The class will be built around sharing expertise and guiding students to find learning methods and practice for object-oriented programming topics. Making programming applications and projects in the courses will strengthen the learning process by putting theory into practice. B.Course Learning Outcomes \u00b6 After completing this course satisfactorily, a student will be able to: Design applications using OO techniques Use the unified software development process to manage software development Use UML for the notation diagrams of applications Apply useful design and architecture patterns for software development. C.Course Topics \u00b6 Object-oriented concepts Unified object-oriented analysis and design process Unified Model Language Use case analysis Object structure and behavior analysis System design Application architecture and design patterns Java implementation of object-oriented design D.Textbooks and Required Hardware or Equipment \u00b6 This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Timothy C. Lethbridge and Robert Lagani\u00e8re, Object-Oriented Software Engineering: Practical Software Development using UML and Java, McGraw Hill Walter Savitch, Absolute C++, Addison-Wesley Longman Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices. E.Grading System \u00b6 Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week homeworks or projects as follow \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\] F. Instructional Strategies and Methods \u00b6 The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, homeworks, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken G. Late Homework \u00b6 Throughout the semester, assignments must be submitted as specified by the announced deadline. Overdue assignments will not be accepted. Unexpected situations must be reported to the instructor for late homeworks by students H. Course Platform and Communication \u00b6 Google Classroom and Github will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor to complete the course with success. I. Academic Integrity, Plagiarism & Cheating \u00b6 Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not. a. What is acceptable when preparing an assignment? \u00b6 Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you. b. What is not acceptable? \u00b6 Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it. J. Expectations \u00b6 You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication. K. Lecture Content and Syllabus Updates \u00b6 If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this. Course Schedule Overview \u00b6 Weeks Dates Subjects Other Tasks Week 1 21.02.2022-24.02.2022 Course Plan and Communication Grading System, Assignments, and Exams. Software and Software Engineering Object Orientation and OOP with Java Part-I(Classes, Objects, Methods,Inheritance,Access Modifiers,This and InstanceOf Keywords) TBD Week 2 28.02.2022-03.03.2022 OOP with Java Part-II (super keyword, final keyword, Polymorphism / Encapsulation, Method Overriding, Nested Inner Class, Static Class, Anonymous Class, Enums / Enum-Constructor / Enum-String, Abstract Class, Object Class, Forms of Inheritance, Benefits, and Costs of Inheritance, Packages, Access Protection in Packages TBD Week 3 07.03.2022-10.03.2022 OOP with Java Part-III(Defining and Interface and Interface Implementation, Nested Interfaces, Variables in Interfaces, Extending Interfaces, Reflection, Wrapper Classes, Lambda Notation) TBD Week 4 14.03.2022-17.03.2022 UML (UML tools, UML building blocks, architecture, diagrams, relationship, association, aggregation, composition comparison, association, dependency, generalization, realization, class diagram, object diagram, component diagram, deployment diagram, interaction diagram, use-case diagram, sequence diagram, collaboration diagram, state-machine diagram, activity diagram, timing diagram) TBD Week 5 21.03.2022-24.03.2022 Plantuml and Examples TBD Week-6 28.03.2022-31.03.2022 UMPLE and Examples TBD Week-7 04.04.2022-07.04.2022 UMPLE and Examples TBD Week-8 09.04.2022-17.04.2022 Midterm TBD Week-9 18.04.2022-21.04.2022 Using Design Patterns TBD Week-10 25.04.2022-28.04.2022 Using Design Patterns TBD Week-11 02.05.2022-05.05.2022 Holiday TBD Week-12 09.05.2022-12.05.2022 UML + UMPLE + Java Implementations TBD Week-13 16.05.2022-19.05.2022 SMC Remote Service Case Study Part-I TBD Week-14 23.05.2022-26.05.2022 SMC Remote Service Case Study Part-II TBD Week-15 30.05.2022-02.06.2022 OOP ATM Case Study Part-I TBD Week-16 06.06.2022-09.06.2022 OOP ATM Case Study Part-II TBD Week-17 13.06.2022-26.06.2022 Final \\(End-Of-Object-Oriented-Programming-Syllabus\\)","title":"Ders \u0130zlencesi"},{"location":"tr/syllabus/syllabus/#recep-tayyip-erdogan-universitesi","text":"","title":"Recep Tayyip Erdo\u011fan \u00dcniversitesi"},{"location":"tr/syllabus/syllabus/#muhendislik-ve-mimarlk-fakultesi","text":"","title":"M\u00fchendislik ve Mimarl\u0131k Fak\u00fcltesi"},{"location":"tr/syllabus/syllabus/#bilgisayar-muhendisligi","text":"","title":"Bilgisayar M\u00fchendisli\u011fi"},{"location":"tr/syllabus/syllabus/#ce204-nesne-yonelimli-programlama","text":"","title":"CE204 Nesne Y\u00f6nelimli Programlama"},{"location":"tr/syllabus/syllabus/#ders-izlencesi","text":"","title":"Ders \u0130zlencesi"},{"location":"tr/syllabus/syllabus/#bahar-donemi-2021-2022","text":"\u0130ndir DOC , SLIDE , PPTX \u0130ndir WORD , PDF Instructor Dr. \u00d6\u011fr. \u00dcyesi U\u011fur CORUH \u0130leti\u015fim Bilgisi ugur.coruh@erdogan.edu.tr Ofis F-301 Google S\u0131n\u0131f Kodu n24xrzo Ders Saati ve G\u00fcn\u00fc Teorik - Pazartesi (13:00-16:00) Lab \u2013 Per\u015fembe (10:00-12:00) Lecture Classroom D-203 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starts with [CE204] tag for the fast response and write formal, clear, and short emails. Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite CE103- Algorithms and Programming I CE100- Algorithms and Programming II Corequisite TBD Requirement TBD *TBD: To Be Defined.","title":"Bahar D\u00f6nemi, 2021-2022"},{"location":"tr/week-1/week-1/","text":"CE103 Algoritma ve Programlama I \u00b6 Hafta-1 (Veritaban\u0131 Sistemleri) \u00b6 Bahar D\u00f6nemi, 2022-2023 \u00b6 \u0130ndir DOC , SLIDE , PPTX Anahat \u00b6 Veritaban\u0131 ve \u0130li\u015fkisel Veritaban\u0131 Anlamak Veritaban\u0131 Tasar\u0131m\u0131 Veritaban\u0131 \u00b6 Veritaban\u0131 \u00b6 Veritaban\u0131 nedir? 1-) Veritaban\u0131 d\u00fczenli bilgiler toplulu\u011fudur. 2-) Bilgisayar ortam\u0131nda saklanan d\u00fczenli verilerdir. 3-) Bilgisayar terminolojisinde, sistematik eri\u015fim imkan\u0131 olan, y\u00f6netilebilir, g\u00fcncellenebilir , ta\u015f\u0131nabilir, birbirleri aras\u0131nda tan\u0131ml\u0131 ili\u015fkiler bulunabilen bilgiler k\u00fcmesidir. 4-) Bilgisayarda sistematik \u015fekilde saklanm\u0131\u015f, programlarca i\u015flenebilecek veri y\u0131\u011f\u0131n\u0131d\u0131r. VTYS \u00b6 Veri Taban\u0131 Y\u00f6netim Sistemi nedir? Veri taban\u0131 tan\u0131mlamak, yaratmak, ya\u015fatmak ve veri taban\u0131na denetimli eri\u015fim sa\u011flamak i\u00e7in kullan\u0131lan yaz\u0131l\u0131m sistemidir. VTYS \u00b6 VTYS\u2019ler a\u015fa\u011f\u0131daki bilgileri bar\u0131nd\u0131rmaktad\u0131r; \u0130li\u015fkili olan veriler ve veriye ula\u015fmak i\u00e7in gerekli olan yaz\u0131l\u0131mlar k\u00fcmesi VTYS \u00b6 Veritaban\u0131 Sistemlerinin \u00dcst\u00fcnl\u00fckleri Verinin tekrarlanmas\u0131n\u0131 \u00f6nler.Veritaban\u0131 sistemleri alt sistemler aras\u0131nda ili\u015fki kurulmas\u0131 ve bir\u00e7ok uygulamada verilerin ayn\u0131 veritaban\u0131 i\u00e7ersinde ortak olarak tasarlanmas\u0131n\u0131 \u00f6ng\u00f6r\u00fcr. VTYS \u00b6 Veritaban\u0131 Sistemlerinin \u00dcst\u00fcnl\u00fckleri Verilerin tutarl\u0131 olmas\u0131n\u0131 sa\u011flar.Veri b\u00fct\u00fcnl\u00fc\u011f\u00fc(data integrity), verinin do\u011frulu\u011funu ve tutarl\u0131\u011f\u0131n\u0131 ifade etmektedir. Veri giri\u015flerine k\u0131s\u0131tlar konularak sadece istenilen aral\u0131kta de\u011fer giri\u015fi sa\u011flanabilir. Varl\u0131k-\u0130li\u015fki Modeli \u00b6 Veri \u00e7\u00f6z\u00fcmleme ve modellemede ili\u015fkilerin ortaya konmas\u0131 i\u00e7in kullan\u0131lan ara\u00e7t\u0131r.Varl\u0131k: Bir alan i\u00e7ersinde di\u011fer nesnelerden ay\u0131rt edilebilen bir \u015fey yada \u201cnesne\u201d. Niteliklerin k\u00fcmesi taraf\u0131ndan tan\u0131mlan\u0131r. \u0130li\u015fki: Birden fazla varl\u0131\u011f\u0131n aras\u0131ndaki ba\u011f\u0131nt\u0131-ili\u015fki. \u0130li\u015fki ve \u0130li\u015fki K\u00fcmeleri \u00b6 Varl\u0131klar aras\u0131ndaki ba\u011flant\u0131ya ili\u015fki ad\u0131 verilir.\u00f6rne\u011fin \u201cBurak\u201d varl\u0131\u011f\u0131 ile \u201cDersler\u201d varl\u0131\u011f\u0131 aras\u0131ndan ili\u015fki vard\u0131r. \u0130li\u015fki k\u00fcmesi, ayn\u0131 t\u00fcrdeki ili\u015fkilerin k\u00fcmesidir,bu ili\u015fki k\u00fcmesi R ile g\u00f6sterilir. Referanslar \u00b6 https://avesis.erdogan.edu.tr/ugur.coruh https://www.linkedin.com/in/ugurcoruh/ https://csworlds.com/what-is-dbms-database-management-system/ https://prepinsta.com/dbms/entity-relationship-model-er-model/ \\(Hafta-2-Son\\)","title":"Database Systems"},{"location":"tr/week-1/week-1/#ce103-algoritma-ve-programlama-i","text":"","title":"CE103 Algoritma ve Programlama I"},{"location":"tr/week-1/week-1/#hafta-1-veritaban-sistemleri","text":"","title":"Hafta-1 (Veritaban\u0131 Sistemleri)"},{"location":"tr/week-1/week-1/#bahar-donemi-2022-2023","text":"\u0130ndir DOC , SLIDE , PPTX","title":"Bahar D\u00f6nemi, 2022-2023"},{"location":"tr/week-1/week-1/#anahat","text":"Veritaban\u0131 ve \u0130li\u015fkisel Veritaban\u0131 Anlamak Veritaban\u0131 Tasar\u0131m\u0131","title":"Anahat"},{"location":"tr/week-1/week-1/#veritaban","text":"","title":"Veritaban\u0131"},{"location":"tr/week-1/week-1/#veritaban_1","text":"Veritaban\u0131 nedir? 1-) Veritaban\u0131 d\u00fczenli bilgiler toplulu\u011fudur. 2-) Bilgisayar ortam\u0131nda saklanan d\u00fczenli verilerdir. 3-) Bilgisayar terminolojisinde, sistematik eri\u015fim imkan\u0131 olan, y\u00f6netilebilir, g\u00fcncellenebilir , ta\u015f\u0131nabilir, birbirleri aras\u0131nda tan\u0131ml\u0131 ili\u015fkiler bulunabilen bilgiler k\u00fcmesidir. 4-) Bilgisayarda sistematik \u015fekilde saklanm\u0131\u015f, programlarca i\u015flenebilecek veri y\u0131\u011f\u0131n\u0131d\u0131r.","title":"Veritaban\u0131"},{"location":"tr/week-1/week-1/#vtys","text":"Veri Taban\u0131 Y\u00f6netim Sistemi nedir? Veri taban\u0131 tan\u0131mlamak, yaratmak, ya\u015fatmak ve veri taban\u0131na denetimli eri\u015fim sa\u011flamak i\u00e7in kullan\u0131lan yaz\u0131l\u0131m sistemidir.","title":"VTYS"},{"location":"tr/week-1/week-1/#vtys_1","text":"VTYS\u2019ler a\u015fa\u011f\u0131daki bilgileri bar\u0131nd\u0131rmaktad\u0131r; \u0130li\u015fkili olan veriler ve veriye ula\u015fmak i\u00e7in gerekli olan yaz\u0131l\u0131mlar k\u00fcmesi","title":"VTYS"},{"location":"tr/week-1/week-1/#vtys_2","text":"Veritaban\u0131 Sistemlerinin \u00dcst\u00fcnl\u00fckleri Verinin tekrarlanmas\u0131n\u0131 \u00f6nler.Veritaban\u0131 sistemleri alt sistemler aras\u0131nda ili\u015fki kurulmas\u0131 ve bir\u00e7ok uygulamada verilerin ayn\u0131 veritaban\u0131 i\u00e7ersinde ortak olarak tasarlanmas\u0131n\u0131 \u00f6ng\u00f6r\u00fcr.","title":"VTYS"},{"location":"tr/week-1/week-1/#vtys_3","text":"Veritaban\u0131 Sistemlerinin \u00dcst\u00fcnl\u00fckleri Verilerin tutarl\u0131 olmas\u0131n\u0131 sa\u011flar.Veri b\u00fct\u00fcnl\u00fc\u011f\u00fc(data integrity), verinin do\u011frulu\u011funu ve tutarl\u0131\u011f\u0131n\u0131 ifade etmektedir. Veri giri\u015flerine k\u0131s\u0131tlar konularak sadece istenilen aral\u0131kta de\u011fer giri\u015fi sa\u011flanabilir.","title":"VTYS"},{"location":"tr/week-1/week-1/#varlk-iliski-modeli","text":"Veri \u00e7\u00f6z\u00fcmleme ve modellemede ili\u015fkilerin ortaya konmas\u0131 i\u00e7in kullan\u0131lan ara\u00e7t\u0131r.Varl\u0131k: Bir alan i\u00e7ersinde di\u011fer nesnelerden ay\u0131rt edilebilen bir \u015fey yada \u201cnesne\u201d. Niteliklerin k\u00fcmesi taraf\u0131ndan tan\u0131mlan\u0131r. \u0130li\u015fki: Birden fazla varl\u0131\u011f\u0131n aras\u0131ndaki ba\u011f\u0131nt\u0131-ili\u015fki.","title":"Varl\u0131k-\u0130li\u015fki Modeli"},{"location":"tr/week-1/week-1/#iliski-ve-iliski-kumeleri","text":"Varl\u0131klar aras\u0131ndaki ba\u011flant\u0131ya ili\u015fki ad\u0131 verilir.\u00f6rne\u011fin \u201cBurak\u201d varl\u0131\u011f\u0131 ile \u201cDersler\u201d varl\u0131\u011f\u0131 aras\u0131ndan ili\u015fki vard\u0131r. \u0130li\u015fki k\u00fcmesi, ayn\u0131 t\u00fcrdeki ili\u015fkilerin k\u00fcmesidir,bu ili\u015fki k\u00fcmesi R ile g\u00f6sterilir.","title":"\u0130li\u015fki ve \u0130li\u015fki K\u00fcmeleri"},{"location":"tr/week-1/week-1/#referanslar","text":"https://avesis.erdogan.edu.tr/ugur.coruh https://www.linkedin.com/in/ugurcoruh/ https://csworlds.com/what-is-dbms-database-management-system/ https://prepinsta.com/dbms/entity-relationship-model-er-model/ \\(Hafta-2-Son\\)","title":"Referanslar"},{"location":"tr/week-2/week-2/","text":"\u00d6rnek Ders Ad\u0131 \u00b6 Hafta-2 (Veri Yap\u0131lar\u0131 ve Algoritmalar) \u00b6 Bahar D\u00f6nemi, 2022-2023 \u00b6 \u0130ndir DOC , SLIDE , PPTX Anahat \u00b6 Algoritma Nedir? Bilgilerin Bilgisayarda \u0130fadesi Diziler Ba\u011fl\u0131 listeler Algoritma \u00b6 Algoritma \u00b6 Algoritma Nedir? Algoritma, Cebrin atas\u0131 ve kurucusu olarak bilinen Harezm\u00ee taraf\u0131ndan 9.y\u00fczy\u0131lda cebir alan\u0131ndaki ara\u015ft\u0131rmalar\u0131 neticesinde ortaya \u00e7\u0131km\u0131\u015ft\u0131r. Avrupal\u0131lar, Harezm\u00ee ismini telaffuz edemediklerinden dolay\u0131 algorizm (Arap say\u0131lar\u0131 kullanarak aritmetik problemler \u00e7\u00f6zme kurallar\u0131) olarak kulland\u0131lar. Algorizm daha sonra \"algoritma\" ad\u0131n\u0131 ald\u0131. Algoritma \u00b6 Algoritma Nedir? G\u00f6rd\u00fc\u011f\u00fcn\u00fcz \u00fczere ana problemimiz bilgisayar\u0131n \u00e7al\u0131\u015fmamas\u0131. \u0130lk ad\u0131m g\u00fc\u00e7 kablosunun tak\u0131l\u0131 olup olmad\u0131\u011f\u0131n\u0131 kontrol etmek. Bu ad\u0131m\u0131n cevab\u0131 Hay\u0131r ise yapmam\u0131z gereken g\u00fc\u00e7 kablosunu takmakt\u0131r, cevap Evet ve h\u00e2l\u00e2 bilgisayar\u0131m\u0131z \u00e7al\u0131\u015fm\u0131yor ise bir sonraki ad\u0131m\u0131 uygulamam\u0131z gerekiyor. \u0130kinci ad\u0131m, uzatma kablosunun durumunu inceledikten sonra e\u011fer bilgisayar\u0131m\u0131z h\u00e2l\u00e2 \u00e7al\u0131\u015fm\u0131yor ise tamire g\u00f6t\u00fcrmemiz gerekti\u011fi sonucunu veriyor. Bilgilerin Bilgisayarda \u0130fadesi \u00b6 Bir insan kendini ifade etmek istedi\u011finde native (ana) bir dil kullan\u0131yor \u00f6yle de\u011fil mi? Bilgisayar da bilgiyi (Resim, ses, yaz\u0131 vb) ifade etmek ve d\u00f6ng\u00fcy\u00fc sa\u011flamak i\u00e7in bit (0 ve 1)' den olu\u015fan ikili say\u0131lar\u0131 (Binary Numbers) kullan\u0131yor. Bilgilerin Bilgisayarda \u0130fadesi \u00b6 \u0130kili say\u0131larda bulunan 1 ve 0 rakamlar\u0131 (bit), bilgisayar\u0131n elektrik iletimi i\u00e7in kulland\u0131\u011f\u0131 transist\u00f6rlerin a\u00e7\u0131k veya kapal\u0131 olma durumunu g\u00f6steriyor. Transist\u00f6rlerde iki tane komut vard\u0131r, 0 (kapat) ve 1 (a\u00e7). Diziler \u00b6 Diziler, anlam ifade etmesi i\u00e7in birden fazla nesneye ihtiya\u00e7 duyabilir. Mesela, \u015eu an kar\u015f\u0131s\u0131nda oldu\u011funuz bilgisayar \u00f6rne\u011fini inceleyelim. Masa\u00fcst\u00fc bilgisayarlar, klavye-mouse-monit\u00f6r \u00fc\u00e7l\u00fcs\u00fcn\u00fc bir araya getirince anlam ifade eder. Herhangi biri olmadan bir i\u015flem yapman\u0131z olas\u0131d\u0131r ama zorludur. Dizi, dezavantajlar\u0131ndan biri olan haf\u0131za problemini inceleyelim. Bilgisayar \u00f6rne\u011fimizden devam edelim. Hali haz\u0131rda bir klavye, bir mouse ve bir monit\u00f6r\u00fcm\u00fcz var. Yeni bir monit\u00f6r ald\u0131\u011f\u0131m\u0131zda daha b\u00fcy\u00fck bir masaya ihtiyac\u0131m\u0131z var. Ayn\u0131 \u015fekilde yeni bir klavye veya mouse ald\u0131\u011f\u0131m\u0131zda da ayn\u0131 durum ge\u00e7erli. Bir yerden bir yere ta\u015f\u0131rken zaman ve g\u00fc\u00e7 kayb\u0131na u\u011fruyoruz. Diziler \u00b6 Ba\u011fl\u0131 listeler \u00b6 Ba\u011fl\u0131 listeler, yan yana zorunlulu\u011fu olmadan veri tutmam\u0131z\u0131 sa\u011flayan yap\u0131lard\u0131r. Yeni gelen eleman i\u00e7in haf\u0131za'da yeni bir alan a\u00e7mam\u0131z gerekmez. Array'dan farkl\u0131 olarak evet elemanlar haf\u0131za i\u00e7erisinde da\u011f\u0131lm\u0131\u015f olabilir, fakat son gelen eleman kendinden bir \u00f6nceki elemana adresini bildirmek zorundad\u0131r. Referanslar \u00b6 https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/algoritma-nedir https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/bilgi-ifade https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/sayi-sistem https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/linked-list \\(Hafta-2-Son\\)","title":"Algorithms"},{"location":"tr/week-2/week-2/#ornek-ders-ad","text":"","title":"\u00d6rnek Ders Ad\u0131"},{"location":"tr/week-2/week-2/#hafta-2-veri-yaplar-ve-algoritmalar","text":"","title":"Hafta-2 (Veri Yap\u0131lar\u0131 ve Algoritmalar)"},{"location":"tr/week-2/week-2/#bahar-donemi-2022-2023","text":"\u0130ndir DOC , SLIDE , PPTX","title":"Bahar D\u00f6nemi, 2022-2023"},{"location":"tr/week-2/week-2/#anahat","text":"Algoritma Nedir? Bilgilerin Bilgisayarda \u0130fadesi Diziler Ba\u011fl\u0131 listeler","title":"Anahat"},{"location":"tr/week-2/week-2/#algoritma","text":"","title":"Algoritma"},{"location":"tr/week-2/week-2/#algoritma_1","text":"Algoritma Nedir? Algoritma, Cebrin atas\u0131 ve kurucusu olarak bilinen Harezm\u00ee taraf\u0131ndan 9.y\u00fczy\u0131lda cebir alan\u0131ndaki ara\u015ft\u0131rmalar\u0131 neticesinde ortaya \u00e7\u0131km\u0131\u015ft\u0131r. Avrupal\u0131lar, Harezm\u00ee ismini telaffuz edemediklerinden dolay\u0131 algorizm (Arap say\u0131lar\u0131 kullanarak aritmetik problemler \u00e7\u00f6zme kurallar\u0131) olarak kulland\u0131lar. Algorizm daha sonra \"algoritma\" ad\u0131n\u0131 ald\u0131.","title":"Algoritma"},{"location":"tr/week-2/week-2/#algoritma_2","text":"Algoritma Nedir? G\u00f6rd\u00fc\u011f\u00fcn\u00fcz \u00fczere ana problemimiz bilgisayar\u0131n \u00e7al\u0131\u015fmamas\u0131. \u0130lk ad\u0131m g\u00fc\u00e7 kablosunun tak\u0131l\u0131 olup olmad\u0131\u011f\u0131n\u0131 kontrol etmek. Bu ad\u0131m\u0131n cevab\u0131 Hay\u0131r ise yapmam\u0131z gereken g\u00fc\u00e7 kablosunu takmakt\u0131r, cevap Evet ve h\u00e2l\u00e2 bilgisayar\u0131m\u0131z \u00e7al\u0131\u015fm\u0131yor ise bir sonraki ad\u0131m\u0131 uygulamam\u0131z gerekiyor. \u0130kinci ad\u0131m, uzatma kablosunun durumunu inceledikten sonra e\u011fer bilgisayar\u0131m\u0131z h\u00e2l\u00e2 \u00e7al\u0131\u015fm\u0131yor ise tamire g\u00f6t\u00fcrmemiz gerekti\u011fi sonucunu veriyor.","title":"Algoritma"},{"location":"tr/week-2/week-2/#bilgilerin-bilgisayarda-ifadesi","text":"Bir insan kendini ifade etmek istedi\u011finde native (ana) bir dil kullan\u0131yor \u00f6yle de\u011fil mi? Bilgisayar da bilgiyi (Resim, ses, yaz\u0131 vb) ifade etmek ve d\u00f6ng\u00fcy\u00fc sa\u011flamak i\u00e7in bit (0 ve 1)' den olu\u015fan ikili say\u0131lar\u0131 (Binary Numbers) kullan\u0131yor.","title":"Bilgilerin Bilgisayarda \u0130fadesi"},{"location":"tr/week-2/week-2/#bilgilerin-bilgisayarda-ifadesi_1","text":"\u0130kili say\u0131larda bulunan 1 ve 0 rakamlar\u0131 (bit), bilgisayar\u0131n elektrik iletimi i\u00e7in kulland\u0131\u011f\u0131 transist\u00f6rlerin a\u00e7\u0131k veya kapal\u0131 olma durumunu g\u00f6steriyor. Transist\u00f6rlerde iki tane komut vard\u0131r, 0 (kapat) ve 1 (a\u00e7).","title":"Bilgilerin Bilgisayarda \u0130fadesi"},{"location":"tr/week-2/week-2/#diziler","text":"Diziler, anlam ifade etmesi i\u00e7in birden fazla nesneye ihtiya\u00e7 duyabilir. Mesela, \u015eu an kar\u015f\u0131s\u0131nda oldu\u011funuz bilgisayar \u00f6rne\u011fini inceleyelim. Masa\u00fcst\u00fc bilgisayarlar, klavye-mouse-monit\u00f6r \u00fc\u00e7l\u00fcs\u00fcn\u00fc bir araya getirince anlam ifade eder. Herhangi biri olmadan bir i\u015flem yapman\u0131z olas\u0131d\u0131r ama zorludur. Dizi, dezavantajlar\u0131ndan biri olan haf\u0131za problemini inceleyelim. Bilgisayar \u00f6rne\u011fimizden devam edelim. Hali haz\u0131rda bir klavye, bir mouse ve bir monit\u00f6r\u00fcm\u00fcz var. Yeni bir monit\u00f6r ald\u0131\u011f\u0131m\u0131zda daha b\u00fcy\u00fck bir masaya ihtiyac\u0131m\u0131z var. Ayn\u0131 \u015fekilde yeni bir klavye veya mouse ald\u0131\u011f\u0131m\u0131zda da ayn\u0131 durum ge\u00e7erli. Bir yerden bir yere ta\u015f\u0131rken zaman ve g\u00fc\u00e7 kayb\u0131na u\u011fruyoruz.","title":"Diziler"},{"location":"tr/week-2/week-2/#diziler_1","text":"","title":"Diziler"},{"location":"tr/week-2/week-2/#bagl-listeler","text":"Ba\u011fl\u0131 listeler, yan yana zorunlulu\u011fu olmadan veri tutmam\u0131z\u0131 sa\u011flayan yap\u0131lard\u0131r. Yeni gelen eleman i\u00e7in haf\u0131za'da yeni bir alan a\u00e7mam\u0131z gerekmez. Array'dan farkl\u0131 olarak evet elemanlar haf\u0131za i\u00e7erisinde da\u011f\u0131lm\u0131\u015f olabilir, fakat son gelen eleman kendinden bir \u00f6nceki elemana adresini bildirmek zorundad\u0131r.","title":"Ba\u011fl\u0131 listeler"},{"location":"tr/week-2/week-2/#referanslar","text":"https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/algoritma-nedir https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/bilgi-ifade https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/sayi-sistem https://app.patika.dev/courses/veri-yapilari-ve-algoritmalar/linked-list \\(Hafta-2-Son\\)","title":"Referanslar"}]}